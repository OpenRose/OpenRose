@* 
 * OpenRose - Requirements Management
 * Licensed under the Apache License, Version 2.0. 
 * See the LICENSE file or visit https://github.com/OpenRose/OpenRose for more details.
*@

@using OpenRose.WebUI.Client.Services.Project
@using OpenRose.WebUI.Client.SharedModels

<MudDialog>
    <TitleContent>
        <MudText Color="Color.Primary">@MudDialog.Title</MudText>
    </TitleContent>
    <DialogContent>
        <MudSelect @bind-Value="UserInput"
                   For="@(() => UserInput)"
                   Required="true"
                   RequiredError="Project is required!"
                   Label="Project">
            @foreach (var _localEachProject in AllProjects)
            {
                <MudSelectItem T="string" Value="_localEachProject.Id.ToString()">@_localEachProject.Name</MudSelectItem>
            }
        </MudSelect>

    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Submit">Yes</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="Cancel">No</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    [Parameter] public string ActionContext { get; set; } = ""; // Usually "Source" or "Target"

    [Inject]
    public IProjectService ProjectService { get; set; }

    private string UserInput { get; set; } = string.Empty; 
    private string ErrorMessage { get; set; } = string.Empty;

    private List<GetProjectDTO> AllProjects { get; set; } = new List<GetProjectDTO>();

    protected override async Task OnInitializedAsync()
    {
        var returnedProjectList = await ProjectService.__GET_Projects__Async();
        if (returnedProjectList != null)
        {
            AllProjects = returnedProjectList.ToList();
        }
        else
        {
            MudDialog.Close(DialogResult.Ok(Guid.Empty));
        }

        StateHasChanged();

    }

    private void Submit() 
    { 
        if (Guid.TryParse(UserInput, out Guid inputTargetProjectId))
        { 
            MudDialog.Close(DialogResult.Ok(inputTargetProjectId));
        } 
        else 
        { 
            ErrorMessage = $"Please select {ActionContext} Project from the selection Listbox.";
        } 
    }

    private void Cancel() => MudDialog.Cancel();
}

