name: Build and Deploy

on:
  push:
    branches:
      - main
      - Alpha/**
      - Beta/**
  pull_request:
    branches:
      - main
      - Alpha/**
      - Beta/**

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch the entire history
        persist-credentials: true  # Ensure credentials persist for pushing

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.x' # Adjust to the version of .NET you are using

    - name: Install GitVersion
      run: dotnet tool install --global GitVersion.Tool

    - name: Add GitVersion to PATH
      run: echo "/home/runner/.dotnet/tools" >> $GITHUB_PATH

    - name: Calculate Version
      id: gitversion
      run: |
        echo "Running dotnet-gitversion to calculate FullSemVer..."
        FullSemVer=$(dotnet-gitversion /showvariable FullSemVer 2>&1) || {
          echo "dotnet-gitversion failed with the following output:"
          echo "$FullSemVer"
          exit 1
        }
        CommitSha=$(git rev-parse --short HEAD)
        BuildDate=$(date -u +"%Y%m%d%H%M%S")
        FullSemVerWithMetadata="${FullSemVer}+build.${BuildDate}.commit.${CommitSha}"
        echo "FullSemVer calculated: $FullSemVerWithMetadata"
        echo "FullSemVer=$FullSemVerWithMetadata" >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Git user
      run: |
        git config --global user.email "openroserm@outlook.com"
        git config --global user.name "OpenRose Requirements Management"

    - name: Debug_Show .csproj files before replacement
      run: |
        find . -type f -name "*.csproj" -exec echo "File: {}" \; -exec cat {} \;

    - name: Replace FullSemVer placeholder
      run: |
        echo "Replacing placeholders in .csproj files"
        echo "Original FullSemVer: ${{ env.FullSemVer }}"
        sed -i "s/{FullSemVer}/${{ env.FullSemVer }}/g" **/*.csproj

    - name: Debug_Show .csproj files after replacement
      run: |
        find . -type f -name "*.csproj" -exec echo "File: {}" \; -exec cat {} \;

    - name: Increment version numbers
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [[ "$(git log -1 --pretty=%B)" == *"[skip ci]"* ]]; then
          echo "Skipping version increment"
          exit 0
        fi
        dotnet-gitversion /version
        dotnet-gitversion /updateprojectfiles
        git add .
        git commit -m "Increment version number [skip ci]"
        git push origin HEAD:${{ github.ref }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Create WebDeployment Packages
      run: |
        VERSION=v${{ env.FullSemVer }}
        dotnet publish OpenRose.API/OpenRose.API.csproj -c Release -o ./package/OpenRose.API
        dotnet publish OpenRose.Web/OpenRose.WebUI.Client/OpenRose.WebUI.Client.csproj -c Release -o ./package/OpenRose.WebUI.Client
        dotnet publish OpenRose.Web/OpenRose.WebUI/OpenRose.WebUI.csproj -c Release -o ./package/OpenRose.WebUI
        cp -r ./package/OpenRose.WebUI.Client/* ./package/OpenRose.WebUI/
        mkdir -p ./package
        zip -r ./package/OpenRose.API-$VERSION.zip ./package/OpenRose.API
        zip -r ./package/OpenRose.WebUI-$VERSION.zip ./package/OpenRose.WebUI

    - name: List package directory contents
      run: ls -la ./package

    - name: Create Tag
      run: |
        VERSION=v${{ env.FullSemVer }}
        git tag -a $VERSION -m "Release $VERSION"
        git push origin $VERSION
        echo "RELEASE_TAG=$VERSION" >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        release_name: Release ${{ env.RELEASE_TAG }}
        body: "Automated release with updated version and deployment package."
        draft: false
        prerelease: false

    - name: Upload Release Assets - API
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./package/OpenRose.API-${{ env.RELEASE_TAG }}.zip
        asset_name: OpenRose.API-${{ env.RELEASE_TAG }}.zip
        asset_content_type: application/zip

    - name: Upload Release Assets - WebUI
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./package/OpenRose.WebUI-${{ env.RELEASE_TAG }}.zip
        asset_name: OpenRose.WebUI-${{ env.RELEASE_TAG }}.zip
        asset_content_type: application/zip

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package
        path: ./package
        retention-days: 30  # Set the retention period to 30 days (adjust as needed)